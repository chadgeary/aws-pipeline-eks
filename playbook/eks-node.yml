---
- name: eks-node.yml
  hosts: localhost
  become: True
  become_user: root
  tasks:

    - name: cloudwatch user
      user:
        name: cloudwatch
        comment: AWS Cloudwatch Agent Service Account

    - name: set messages and secure readable in logrotate syslog
      blockinfile:
        block: |
          #     cloudwatch to read logs
                /bin/setfacl -m g:cloudwatch:r /var/log/messages
                /bin/setfacl -m g:cloudwatch:r /var/log/secure
                /bin/setfacl -m g:cloudwatch:rx /var/log/audit
                /bin/setfacl -m g:cloudwatch:r /var/log/audit/audit.log
        insertbefore: "    endscript"
        path: /etc/logrotate.d/syslog

    - name: set active messages and secure readable
      acl:
        path: "/var/log/{{ item }}"
        entity: cloudwatch
        etype: group
        permissions: r
        state: present
      with_items:
        - messages
        - secure
        - audit/audit.log

    - name: set active audit dir readable and executable
      acl:
        path: "/var/log/{{ item }}"
        entity: cloudwatch
        etype: group
        permissions: rx
        state: present
      with_items:
        - audit

    - name: cloudwatch agent install
      yum:
        name: 'https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm'
        state: latest

    - name: cloudwatch conf
      file:
        path: /opt/aws/amazon-cloudwatch-agent/etc
        state: directory
        mode: 0755
        owner: cloudwatch
        group: cloudwatch

    - name: cloudwatch conf file
      template:
        src: amazon-cloudwatch-agent.json
        dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        owner: cloudwatch
        group: cloudwatch
        mode: '0440'

    - name: cloudwatch agent load configuration file
      shell: |
          /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s

    - name: ec2-user kubectl directories
      file:
        path: "/home/ec2-user/{{ item }}"
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0700'
      loop:
        - bin
        - .kube

    - name: kubectl versions and urls
      set_fact:
        cluster_version_urls:
          "1.21": "https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl"
          "1.20": "https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl"
          "1.19": "https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl"
          "1.18": "https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl"

    - name: ec2-user kubectl download
      get_url:
        url: "{{ item.value }}"
        dest: /home/ec2-user/bin/kubectl
        owner: ec2-user
        group: ec2-user
        mode: '0500'
      loop: "{{ lookup('dict', cluster_version_urls) }}"
      when: cluster_version|string in item.key
