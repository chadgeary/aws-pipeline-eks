apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudblock.fullname" . }}
  labels:
    {{- include "cloudblock.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cloudblock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudblock.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudblock.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: {{ .Values.env.TZ }}
            - name: PIHOLE_DNS_
              value: {{ .Values.env.PIHOLE_DNS_ }}
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudblock-secrets
                  key: WEBPASSWORD
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: efspihole
              mountPath: /etc/pihole
            - name: efsdnsmasq
              mountPath: /etc/dnsmasq.d
            - name: cloudblock-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: efspihole
          persistentVolumeClaim:
            claimName: efspihole
        - name: efsdnsmasq
          persistentVolumeClaim:
            claimName: efsdnsmasq
        - name: cloudblock-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "cloudblock-secrets"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
